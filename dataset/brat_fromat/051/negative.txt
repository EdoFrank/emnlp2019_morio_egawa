op_id: 51
op_title: I believe Microsoft Visual Studio 1998 runs rings around any current open source development environment. CMV.

The open-source development environment is called ***Linux***.

You have:

 - gcc: One of the best optimizing compilers in the world for C, C++, Objective-C, Fortran, Java, Ada, and Go,
 - Others:  Industry-standard interpreters for Perl, Python, Haskell, OCaml, Erlang, and craptons of other stuff
 - vim, emacs:  Extremely powerful, syntax-highlighted, macro-driven, customizable text editors with tens of thousands of modules, plugins, and guides and support for code tags, call trees, regular expressions, etc. etc.
 - gdb:  A powerful debugger with deep support for analysis
 - grpof:  A comprehensive general profiler with dozens of utilities to analyze the results
 - valgrind:  A leading memory analysis framework with tools for categorizing memory issues, race conditions, stack corruption, and lots more
 - make:  scriptable build system with completely open support for user commands, variables, conditionals, pattern substution, and so forth
 - autotools:  utilities for automatically generating inputs for make AND for tailoring it to the system in question
 - grep:  search through directories of text files and get results with line number and context
 - svn, git, mercurial, etc.:  support for any reasonable version control

That's just from the *command line*, and most of that stuff doesn't require installing anything.  And this is *before you pay for anything*.

I've been using vim for a few years (not that long by guru standards) and I'm easily 3-4x more productive in it than in a more traditional IDE-style editor.  With ctags and similar tools I can use it to jump to a definition of any variable, function, or class, view a call tree or an object browser, or fold in sections of code that are in my way.

If you've only used the relatively dumb editors in (even the latest versions of) Visual Studio, you have *absolutely no idea* how much more powerful a strong editor is.  Yes, there's a learning curve, but for something that you're going to be doing every day for the rest of your life, it's not prohibitive.

For other tasks, the standard (GNU) Linux command line has evolved over the course of twenty years to be one of the best text-processing tools in the world, due largely to the piping paradigm, the wide variety of text processing tools standard in the shell, and the ease and integration of things like Perl scripts.

I manage a large C systems code base and it would be much, much harder without the tools Linux affords (and I have a lot of development experience in both MS and Linux environments).  We'd be *years* behind.